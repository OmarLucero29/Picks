name: daily
on:
  schedule:
    - cron: "0 12 * * *"   # 12:00 UTC diario
  workflow_dispatch: {}

concurrency:
  group: daily-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-daily:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Preflight secrets
        env:
          HAS_ODDS: ${{ secrets.ODDS_API_KEY }}
          HAS_PS: ${{ secrets.PANDASCORE_TOKEN }}
          HAS_HF: ${{ secrets.HF_TOKEN }}
          HAS_SPACE: ${{ secrets.HF_SPACE }}
          HAS_TG: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          HAS_TGCHAT: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          [ -n "$HAS_ODDS" ] && echo "ODDS_API_KEY: OK" || echo "::warning::ODDS_API_KEY faltante"
          [ -n "$HAS_PS" ] && echo "PANDASCORE_TOKEN: OK" || echo "PANDASCORE_TOKEN faltante (solo e-sports)"
          [ -n "$HAS_HF" ] && echo "HF_TOKEN: OK" || echo "::warning::HF_TOKEN faltante"
          [ -n "$HAS_SPACE" ] && echo "HF_SPACE: OK" || echo "::warning::HF_SPACE faltante"
          if [ -n "$HAS_TG" ] && [ -n "$HAS_TGCHAT" ]; then echo "Telegram: OK"; else echo "Telegram: no configurado"; fi

      - name: Fetch upcoming (48h)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
          PANDASCORE_TOKEN: ${{ secrets.PANDASCORE_TOKEN }}
        run: python pipelines/fetch_all.py --mode daily

      - name: Build features
        run: python pipelines/features.py

      - name: Predict
        run: python models/predict.py

      - name: Select Top-5
        run: python serving/select_picks.py

      - name: Build Parlay
        run: python serving/parlay_builder.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: daily_outputs
          path: reports/

      - name: Sync to Hugging Face
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_SPACE: ${{ secrets.HF_SPACE }}
        run: python serving/sync_hf.py

      - name: Notify Telegram (robusto)
        if: ${{ secrets.TELEGRAM_BOT_TOKEN != '' && secrets.TELEGRAM_CHAT_ID != '' }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          HF_SPACE: ${{ secrets.HF_SPACE }}
        run: |
          set -e
          echo "Enviando mensaje a Telegram…"
          RES=$(curl -s -w "\n%{http_code}" -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="✅ Picks y Parlay publicados. Space: ${HF_SPACE}")
          CODE=$(echo "$RES" | tail -n1)
          BODY=$(echo "$RES" | head -n1)
          echo "HTTP $CODE"
          echo "$BODY"
          test "$CODE" = "200"
