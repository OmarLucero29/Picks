name: daily
on:
  schedule:
    - cron: '0 12 * * *'   # 12:00 UTC diario
  workflow_dispatch: {}

concurrency:
  group: daily-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-daily:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      # Exponemos secrets como variables del JOB
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
      PANDASCORE_TOKEN: ${{ secrets.PANDASCORE_TOKEN }}
      APIFOOTBALL_KEY: ${{ secrets.APIFOOTBALL_KEY }}
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      HF_SPACE: ${{ secrets.HF_SPACE }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Preflight secrets
        run: |
          [ -n "$ODDS_API_KEY" ] && echo "ODDS_API_KEY: OK" || echo "::warning::ODDS_API_KEY faltante"
          [ -n "$PANDASCORE_TOKEN" ] && echo "PANDASCORE_TOKEN: OK" || echo "PANDASCORE_TOKEN faltante (e-sports)"
          [ -n "$APIFOOTBALL_KEY" ] && echo "APIFOOTBALL_KEY: OK" || echo "::warning::APIFOOTBALL_KEY faltante (fútbol)"
          [ -n "$HF_TOKEN" ] && echo "HF_TOKEN: OK" || echo "::warning::HF_TOKEN faltante"
          [ -n "$HF_SPACE" ] && echo "HF_SPACE: OK" || echo "::warning::HF_SPACE faltante"
          if [ -n "$TELEGRAM_BOT_TOKEN" ] && [ -n "$TELEGRAM_CHAT_ID" ]; then echo "Telegram: OK"; else echo "Telegram: no configurado"; fi

      - name: Fetch upcoming (48h)
        run: python pipelines/fetch_all.py --mode daily

      - name: Build features
        run: python pipelines/features.py

      - name: Predict
        run: python models/predict.py

      - name: Select Top-5
        run: python serving/select_picks.py

      - name: Build Parlay
        run: python serving/parlay_builder.py

      - name: Append to Google Sheets
        env:
          GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}
          GSHEET_ID: ${{ secrets.GSHEET_ID }}
          GSHEET_PICKS_TAB: Picks
          GSHEET_PARLAY_TAB: Parlay
        run: python serving/sheets_append.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: daily_outputs
          path: reports/

      - name: Sync to Hugging Face
        run: python serving/sync_hf.py

      - name: Notify Telegram (robusto)
        run: |
          set -e
          if [ -z "$TELEGRAM_BOT_TOKEN" ] || [ -z "$TELEGRAM_CHAT_ID" ]; then
            echo "Telegram no configurado; omitiendo notificación."
            exit 0
          fi
          echo "Enviando mensaje a Telegram…"
          RES=$(curl -s -w "\n%{http_code}" -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="✅ Picks y Parlay publicados. Space: ${HF_SPACE}")
          CODE=$(echo "$RES" | tail -n1); BODY=$(echo "$RES" | head -n1)
          echo "HTTP $CODE"; echo "$BODY"
          test "$CODE" = "200"
