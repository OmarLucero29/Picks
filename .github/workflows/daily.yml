name: daily

on:
  schedule:
    - cron: "0 12 * * *"  # 12:00 UTC diario
  workflow_dispatch: {}

concurrency:
  group: daily-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-daily:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    env:
      PYTHONPATH: ${{ github.workspace }}
      APISPORTS_KEY: ${{ secrets.APISPORTS_KEY }}
      GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}
      GSHEET_ID: ${{ secrets.GSHEET_ID }}
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      HF_SPACE: ${{ secrets.HF_SPACE }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      MAX_PICKS: "5"
      PARLAY_LEGS: "3"
      PARLAY_LEGS_DREAM: "5"
      TARGET_DEC_ODDS: "2.5"
      TARGET_DEC_ODDS_DREAM: "10.0"
      STAKE_DEFAULT: "5%"
      STAKE_SEGURITO: "5%"
      STAKE_SONADORA: "2%"

      GSHEET_PICKS_TAB: "PICKS"
      GSHEET_PARLAY_TAB: "PARLAYS"
      GSHEET_SAVED_TAB: "PICKS_GUARDADOS"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Preflight secrets
        run: |
          [ -n "$APISPORTS_KEY" ] && echo "APISPORTS_KEY: OK" || (echo "::error::APISPORTS_KEY faltante" && exit 1)
          [ -n "$GCP_SA_JSON" ] && echo "GCP_SA_JSON: OK" || echo "::warning::GCP_SA_JSON faltante"
          [ -n "$GSHEET_ID" ] && echo "GSHEET_ID: OK" || echo "::warning::GSHEET_ID faltante"
          [ -n "$HF_TOKEN" ] && echo "HF_TOKEN: OK" || echo "::warning::HF_TOKEN faltante"
          echo "Telegram: $([ -n "$TELEGRAM_BOT_TOKEN" ] && [ -n "$TELEGRAM_CHAT_ID" ] && echo OK || echo off)"

      - name: Debug paths
        run: |
          echo "Workspace = $GITHUB_WORKSPACE"
          python - <<'PY'
import os, sys, pathlib
print("cwd:", os.getcwd())
print("sys.path[:3]:", sys.path[:3])
print("integrations exists ->", pathlib.Path("integrations").exists())
print("pipelines exists ->", pathlib.Path("pipelines").exists())
PY

      - name: Fetch upcoming (48-72h) + results D-1
        run: python pipelines/fetch_all.py --mode daily

      - name: Build features
        run: python pipelines/features.py

      - name: Predict
        run: python models/predict.py

      - name: Select Picks
        run: python serving/select_picks.py

      - name: Build Parlays
        run: python serving/parlay_builder.py

      - name: Append to Google Sheets
        env:
          GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}
          GSHEET_ID: ${{ secrets.GSHEET_ID }}
          GSHEET_PICKS_TAB: "PICKS"
          GSHEET_PARLAY_TAB: "PARLAYS"
          GSHEET_SAVED_TAB: "PICKS_GUARDADOS"
        run: python serving/sheets_append.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: daily_outputs
          path: reports/

      - name: Notify Telegram
        if: ${{ env.TELEGRAM_BOT_TOKEN != '' && env.TELEGRAM_CHAT_ID != '' }}
        run: |
          TXT="âœ… Picks y Parlays generados.\nSpace: ${HF_SPACE}"
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" -d text="$TXT" >/dev/null || true
