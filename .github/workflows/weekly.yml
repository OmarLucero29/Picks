name: weekly

on:
  schedule:
    - cron: "0 7 * * 2"   # Martes 07:00 UTC
  workflow_dispatch: {}

jobs:
  run-weekly:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    env:
      APISPORTS_KEY: ${{ secrets.APISPORTS_KEY }}
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      GSHEET_ID: ${{ secrets.GSHEET_ID }}
      GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Preflight secrets
        run: |
          [ -n "$APISPORTS_KEY" ] || { echo "::error::APISPORTS_KEY faltante"; exit 1; }
          echo "APISPORTS_KEY: OK"
          [ -n "$GSHEET_ID" ] && echo "GSHEET_ID: OK" || echo "::warning::GSHEET_ID faltante"
          [ -n "$GCP_SA_JSON" ] && echo "GCP_SA_JSON: OK" || echo "::warning::GCP_SA_JSON faltante"
          [ -n "$TELEGRAM_BOT_TOKEN" ] && [ -n "$TELEGRAM_CHAT_ID" ] && echo "Telegram: OK" || echo "Telegram: no configurado"

      - name: Backfill progresivo rápido (ventanas mensuales y concurrencia)
        shell: bash
        run: |
          set -e
          Y_START=2021
          Y_END=2024
          WEEK=$(date -u +%V)
          M=$(( (10#$WEEK % 12) + 1 ))
          CONC=10
          THROTTLE=220
          WIN=30
          echo "Semana ISO $WEEK -> mes $M | CONC=$CONC THROTTLE=$THROTTLE WIN=$WIN"
          for Y in $(seq $Y_START $Y_END); do
            START=$(date -u -d "$Y-$M-01" +%F)
            END=$(date -u -d "$START +1 month -1 day" +%F)
            echo "Backfill $Y-$M ($START..$END)"
            # Fútbol con from/to (mucho más rápido)
            python pipelines/backfill.py --sport soccer \
              --start "$START" --end "$END" \
              --window-days "$WIN" --concurrency "$CONC" --throttle-ms "$THROTTLE" || true
            # Resto por día con concurrencia
            python pipelines/backfill.py --sport mlb,nfl,nba,nhl \
              --start "$START" --end "$END" \
              --concurrency "$CONC" --throttle-ms "$THROTTLE" || true
          done

      - name: Reporte de avance de históricos
        run: |
          python pipelines/progress_backfill.py --years 2021-2024

      - name: Rebuild features + recalibración
        run: |
          python pipelines/features.py
          python pipelines/recalibrate.py

      - name: Predict + servir
        run: |
          python models/predict.py
          python serving/select_picks.py
          python serving/parlay_builder.py
          python serving/sheets_append.py

      - name: Notify Telegram
        if: ${{ env.TELEGRAM_BOT_TOKEN != '' && env.TELEGRAM_CHAT_ID != '' }}
        run: |
          MSG="✅ Weekly OK. Avance históricos en reports/backfill_progress.csv"
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" -d text="$MSG" >/dev/null || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: weekly_reports
          path: |
            reports/
            data/historical/*/index.csv
